# Default values for aiostack-docs.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Command to deploy helm chart:
# helm install aiostack-docs aiostack-docs/aiostack-docs --namespace aiostack-docs --create-namespace --values values.yaml

replicaCount: 1

image:
  repository: asia-south1-docker.pkg.dev/aurva-gcp/aiostack-docs/aiostack-docs
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "dev4"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "aiostack-docs-sa"

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector:
  env: staging
  nodepool: app-node-arm

tolerations: []

affinity: {}

httproute:
  enabled: true
  name: aiostack-docs
  gateway:
    name: aurva-public-gateway
    namespace: kube-system
  privateAccess:
    enabled: false
    securityPolicy: aurva-private-vpn-alb-access
  host: "ai.staging.aurva.io"
  service:
    name: aiostack-docs
    port: 3000

healthCheckPolicy:
  enabled: false
  name: aiostack-docs
  logConfig:
    enabled: false
  config:
    type: HTTP
    httpHealthCheck:
      port: 3000
      requestPath: /
  serviceName: aiostack-docs
