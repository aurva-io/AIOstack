global:
  namespace: aiostack-test

observer:
  enabled: true
  namespaceOverride: aiostack-test
  image:
    repository: public.ecr.aws/l5a6x1y4/aiostack-observer
    tag: bananav2
    pullPolicy: IfNotPresent
  resources:
    requests:
      memory: "64Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "200m"
  nodeSelector: {}
  tolerations: []
  affinity: {}
  dnsPolicy: ClusterFirst
  env:
    - name: COMPANY_ID
      value: "d9525740-beb5-401a-9e35-b487f6b30adc"
    - name: CONTROLLER_URL
      value: "aiostack-commander.aiostack-test.svc.cluster.local:8085"
    - name: IS_LOCAL_ENV
      value: "false"
    - name: MONITORING_ENABLED
      value: "false"
    - name: TRACE_SSL
      value: "true"
    - name: PROCFS_PATH
      value: "/proc"
    - name: TRACE_PSQL
      value: "false"
    - name: TRACE_SQLSERVER
      value: "false"
    - name: TRACE_MYSQL
      value: "false"
    - name: TRACE_EGRESS
      value: "true"
    - name: TRACE_GO_TLS
      value: "true"
    - name: TRACE_ML_SERVICES
      value: "true"
    - name: TRACE_HTTP
      value: "true"
    - name: TRACE_INTERNAL_SVC
      value: "true"
    - name: INTERNAL_SVC_SAMPLE_INTERVAL
      value: "0s"
    - name: LOGS_TTL
      value: "30s"
    - name: AGGREGATOR_MAX_CONNECTIONS
      value: "10000"
    - name: FLUSHER_WORKER_POOL_SIZE
      value: "10000"
    - name: TRACE_INTERNAL_SVC_HTTP
      value: "true"
    - name: ENABLE_METRICS
      value: "true"
    - name: ENABLE_PROFILING
      value: "false"
    - name: TRACE_AI_PROTOCOL
      value: "true"
    - name: INTERNAL_SVC_HTTP_SAMPLE_INTERVAL
      value: "0s"
    - name: CONNECTION_CHANNEL_SIZE
      value: "100000"
    - name: SKIP_NAMESPACES
      value: "aurva-dataplane,aurva-dataplane-staging,aurva-dataplane-uat,aurva-dataplane-prod,aurva-dataplane-groww,kube-system,aiostack-test"
  serviceAccount:
    # -- Create a service account for the observer
    create: true
    # -- Service account name
    name: aiostack-observer-sa
    # -- Annotations applied to created service account
    annotations:
      # eks.amazonaws.com/role-arn: arn:aws:iam::<account-id>:role/<role-name>
    # -- Labels applied to created service account
    labels: {}

commander:
  enabled: true
  image:
    repository: public.ecr.aws/l5a6x1y4/aiostack-commander
    tag: bananav2
    pullPolicy: IfNotPresent
  replicaCount: 1
  service:
    type: ClusterIP
    port: 8085
    targetPort: 8085
  resources:
    requests:
      memory: "128Mi"
      cpu: "200m"
    limits:
      memory: "256Mi"
      cpu: "500m"
  env:
    - name: COMPANY_ID
      value: "d9525740-beb5-401a-9e35-b487f6b30adc"
  serviceAccount:
    # -- Create a service account for the commander
    create: true
    # -- Service account name
    name: aiostack-commander-sa
    # -- Annotations applied to created service account
    annotations:
      # eks.amazonaws.com/role-arn: arn:aws:iam::<account-id>:role/<role-name>
    # -- Labels applied to created service account
    labels: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

postgresql:
  enabled: true
  image:
    repository: postgres
    tag: "15"
    pullPolicy: IfNotPresent
  auth:
    postgresPassword: "aurva123"
    database: "global"
  persistence:
    enabled: true
    size: 10Gi
    storageClass: ""
  service:
    type: ClusterIP
    port: 5432
