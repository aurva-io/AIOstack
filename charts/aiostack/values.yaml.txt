global:
  namespace: alphabet

observer:
  enabled: true
  version: v1.0.2_alpha
  nodeSelector: {}
  tolerations: []
  affinity: {}
  serviceAccount:
    create: true
    name: aiostack-observer-sa
    annotations:
    labels: {}
  env:
    - name: TRACE_SSL
      value: "true"
    - name: PROCFS_PATH
      value: "/proc"
    - name: TRACE_PSQL
      value: "false"
    - name: TRACE_SQLSERVER
      value: "false"
    - name: TRACE_MYSQL
      value: "false"
    - name: TRACE_EGRESS
      value: "true"
    - name: TRACE_GO_TLS
      value: "true"
    - name: TRACE_INTERNAL_SVC
      value: "true"
    - name: INTERNAL_SVC_SAMPLE_INTERVAL
      value: "0s"
    - name: LOGS_TTL
      value: "30s"
    - name: TRACE_INTERNAL_SVC_HTTP
      value: "true"
    - name: INTERNAL_SVC_HTTP_SAMPLE_INTERVAL
      value: "0s"
    - name: CONNECTION_CHANNEL_SIZE
      value: "100"
    # The following are for you to modify
    - name: SKIP_NAMESPACES
      value: "aurva-dataplane-staging,aurva-dataplane-uat,aurva-dataplane-prod,kube-system,alphabet,aiostack,monitoring,gke-mcs"
    - name: OUTPOST_URL
      value: "aiostack-outpost.alphabet.svc.cluster.local:7471"
    - name: IS_OUTPOST_URL_SECURE
      value: "false"

outpost:
  enabled: true
  version: v1.0.2_alpha
  replicaCount: 1
  nodeSelector: {}
  tolerations: []
  affinity: {}
  service:
    type: ClusterIP
    port: 7471
    targetPort: 7471
  serviceAccount:
    create: true
    name: aiostack-outpost-sa
    annotations:
    labels: {}
  env:
    - name: OUTPOST_PORT
      value: ":7471"
    # The following are for you to modify
    - name: COMMANDER_URL
      value: "hq.aurva.ai:443"
    - name: INSECURE_SKIP_VERIFY
      value: "true"
    - name: COMPANY_ID
      value: "b83544da-7580-4129-b0ea-5d2635d1928f"
    - name: AIOSTACK_VALIDATION_KEY
      value: ""

commander:
  enabled: true
  version: v1.0.2_alpha
  replicaCount: 1
  nodeSelector: {}
  tolerations: []
  affinity: {}
  service:
    type: ClusterIP
    port: 7470
    targetPort: 7470
  serviceAccount:
    create: true
    name: aiostack-commander-sa
    annotations:
    labels: {}
  env:
    - name: LOG_ENV
      value: "production"
    - name: GLOBAL_DB_URL
      value: "postgres://postgres:aurvaaiostack@aiostack-postgresql.alphabet.svc.cluster.local:5432/global"
    - name: GLOBAL_CH_URL
      value: "clickhouse://aurva:aurvaaiostack@aiostack-clickhouse.alphabet.svc.cluster.local:9000/default"
    - name: COMMANDER_PORT
      value: ":7470"
    - name: "INSECURE_SKIP_VERIFY"
      value: "false"
    - name: GKE_MODE
      value: "true"
    - name: TLS_CERT_PATH
      value: "/etc/commander/tls/tls.crt"
    - name: TLS_KEY_PATH
      value: "/etc/commander/tls/tls.key"

  httproute:
    enabled: true
    name: aiostack-commander
    gateway:
      name: aiostack-public-gateway
      namespace: kube-system
    privateAccess:
      enabled: false
      securityPolicy: aurva-private-vpn-alb-access
    host: "hq.aurva.ai"
    service:
      name: aiostack-commander
      port: 7470

  healthCheckPolicy:
    enabled: true
    name: aiostack-commander
    logConfig:
      enabled: false
    config:
      type: GRPC
      grpcHealthCheck:
        grpcServiceName: grpcServer
        port: 8099
    serviceName: aiostack-commander

  # -- TLS secrets for gke mode
  volumes:
    - name: tls-secrets-commander
      secret:
        secretName: grpc-tls-secret-commander

  volumeMounts:
    - name: tls-secrets-commander
      mountPath: /etc/commander/tls
      readOnly: true

emissary:
  enabled: true
  image:
    repository: public.ecr.aws/l5a6x1y4/aiostack-emissary
    tag: v1.0.2_alpha
    pullPolicy: IfNotPresent
  replicaCount: 1
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  env:
    - name: LOG_ENV
      value: "production"
    - name: GLOBAL_DB_URL
      value: "postgres://postgres:aurvaaiostack@aiostack-postgresql.alphabet.svc.cluster.local:5432/global"
    - name: GLOBAL_DB_READ_URL
      value: "postgres://postgres:aurvaaiostack@aiostack-postgresql.alphabet.svc.cluster.local:5432/global"
    - name: GLOBAL_CH_URL
      value: "clickhouse://aurva:aurvaaiostack@aiostack-clickhouse.alphabet.svc.cluster.local:9000/default"
    - name: PRIVATE_KEY
      value: ""
    - name: PUBLIC_KEY
      value: ""
    - name: VAULT_PRIVATE_KEY
      value: ""
    - name: SMTP_USERNAME
      value: "swapnil.nair@aurva.io"
    - name: SMTP_PASSWORD
      value: ""
    - name: SMTP_FROM_EMAIL
      value: "swapnil.nair@aurva.io"

  httproute:
    enabled: true
    name: aiostack-emissary
    gateway:
      name: aiostack-public-gateway
      namespace: kube-system
    privateAccess:
      enabled: false
      securityPolicy: aurva-private-vpn-alb-access
    host: "api.aurva.ai"
    service:
      name: aiostack-emissary
      port: 8080

  healthCheckPolicy:
    enabled: true
    name: aiostack-emissary
    logConfig:
      enabled: false
    config:
      type: HTTP
      httpHealthCheck:
        port: 8080
        requestPath: /unauth/ping
    serviceName: aiostack-emissary

  serviceAccount:
    create: true
    name: aiostack-emissary-sa
    annotations:
    labels: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

ui:
  enabled: true
  domain: "staging.aurva.ai"
  image:
    repository: public.ecr.aws/l5a6x1y4/aiostack-ui
    tag: v1.0.2_alpha
    pullPolicy: IfNotPresent
  replicaCount: 1
  dnsPolicy: "ClusterFirst"
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  env:
    - name: NEXT_PUBLIC_API_URL
      value: "https://api.aurva.ai/"
    - name: VERSION
      value: "v1.0.2_alpha"
  additionalLabels: {}
  annotations: {}

  healthCheck:
    enabled: true
    path: "/"
    initialDelaySeconds: 30
    periodSeconds: 10
  serviceAccount:
    create: true
    name: aiostack-ui-sa
    annotations:
    labels: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Service configuration
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000

  httproute:
    enabled: true
    name: aiostack-ui
    gateway:
      name: aiostack-public-gateway
      namespace: kube-system
    privateAccess:
      enabled: false
      securityPolicy: aurva-private-vpn-alb-access
    host: "app.aurva.ai"
    service:
      name: aiostack-ui
      port: 3000

  healthCheckPolicy:
    enabled: true
    name: aiostack-ui
    logConfig:
      enabled: false
    config:
      type: HTTP
      httpHealthCheck:
        port: 3000
        requestPath: /
    serviceName: aiostack-ui

postgresql:
  enabled: true
  image:
    repository: postgres
    tag: "17"
    pullPolicy: IfNotPresent
  auth:
    postgresPassword: "aurvaaiostack"
    username: "postgres"
    database: "global"
  persistence:
    enabled: true
    size: 10Gi
    storageClass: ""
  service:
    type: ClusterIP
    port: 5432

clickhouse:
  enabled: true
  replicaCount: 1
  image:
    repository: clickhouse/clickhouse-server
    tag: "24.8-alpine"
    pullPolicy: IfNotPresent
  auth:
    username: "aurva"
    database: "default"
    password: "aurvaaiostack"
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  persistence:
    enabled: true
    size: 20Gi
  service:
    type: ClusterIP
    httpPort: 8123
    nativePort: 9000
  config:
    logLevel: "information"
    maxMemoryUsage: 0.8
    maxServerMemoryUsage: 0.9
    timezone: "UTC"
    queryLog: false
    customSettings: |
      <merge_tree>
        <max_suspicious_broken_parts>100</max_suspicious_broken_parts>
        <parts_to_delay_insert>1000</parts_to_delay_insert>
        <parts_to_throw_insert>3000</parts_to_throw_insert>
      </merge_tree>
      <profiles>
        <default>
          <max_memory_usage>8000000000</max_memory_usage>
          <use_uncompressed_cache>0</use_uncompressed_cache>
          <load_balancing>random</load_balancing>
          <max_execution_time>300</max_execution_time>
        </default>
      </profiles>
  customConfig: false
